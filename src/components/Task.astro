---
import { Icon } from '@astrojs/starlight/components';

/**
 * Task component that uses Starlight's aside styling with orange/amber colors.
 * 
 * @prop {string} title - The title of the task
 * @prop {number} number - The task number (required)
 * @prop {string} [tutorialNumber] - Tutorial number to use for the task
 */
interface Props {
  title: string;
  number: number;
  tutorialNumber?: string;
}

// Get props with explicit numbering
const { title, number, tutorialNumber } = Astro.props;

// Format the task label based on whether we have a tutorialNumber
let taskLabel = `Task ${number}`;
let taskId = `task-${number}`;
if (tutorialNumber) {
  taskLabel = `Task ${tutorialNumber}.${number}`;
  taskId = `task-${tutorialNumber}-${number}`;
}
---

<aside class="starlight-aside starlight-aside--task sl-markdown-content my-6">
  <p class="starlight-aside__title flex items-center gap-2">
    <input type="checkbox" id={taskId} class="task-checkbox w-4 h-4 mr-2 accent-gray-500" />
    <Icon name="pencil" class="starlight-aside__icon" size="1rem" />
    <strong>{taskLabel}: {title}</strong>
  </p>
  <div class="starlight-aside__content">
    <slot />
  </div>
</aside>

<style>
  .starlight-aside--task {
    --sl-color-asides-text-accent: var(--sl-color-gray-2);
    --sl-color-asides-border: var(--sl-color-gray-3);
    background-color: var(--sl-color-gray-6);
  }
  
  .starlight-aside--task .starlight-aside__title {
    color: var(--sl-color-asides-text-accent);
    margin: 0;
  }
  
  .starlight-aside--task .starlight-aside__content {
    color: var(--sl-color-asides-text-accent);
  }
</style>